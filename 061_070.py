# 061
# price 변수에는 날짜와 종가 정보가 저장돼 있다. 날짜 정보를 제외하고 가격 정보만을 출력하라. (힌트 : 슬라이싱)
price = ['20180728', 100, 130, 140, 150, 160, 170]
# 출력 예시 : [100, 130, 140, 150, 160, 170]
# 인덱스 순서 0번을 제외한 1번부터 출력되게끔 = 1: (1번부터 끝까지)
print(price[1:])

# 062
# 슬라이싱을 사용해서 홀수만 출력하라.
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# 실행 예 : [1, 3, 5, 7, 9]
# [시작 인덱스, 끝나는 인덱스, 간격]
# 0번부터 2칸 씩 출력
print(nums[::2])

# 063
# 슬라이싱을 사용해서 짝수만 출력하라.
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# 실행 예 : [2, 4, 6, 8, 10]
# 0번을 제외한 1번부터 2칸 씩 출력
print(nums[1::2])

# 064
# 슬라이싱을 사용해서 리스트의 숫자를 역 방향으로 출력하라.
nums = [1, 2, 3, 4, 5]
# 실행 예 : [5, 4, 3, 2, 1]
# 뒤에서부터 출력하면 됨, -1씩
print(nums[::-1])

# 065
# interest 리스트에는 아래의 데이터가 바인딩되어 있다.
interest = ['삼성전자', 'LG전자', 'Naver']
# interest 리스트를 사용하여 아래와 같이 화면에 출력하라.
# 출력 예시 : 삼성전자 Naver
print(interest[0], interest[2])

# 066 join 메서드
# interest 리스트에는 아래의 데이터가 바인딩되어 있다.
interest = ['삼성전자', 'LG전자', 'Naver', 'SK하이닉스', '미래에셋대우']
# interest 리스트를 사용하여 아래와 같이 화면에 출력하라.
# 출력 예시 : 삼성전자 LG전자 Naver SK하이닉스 미래에셋대우
# print(interest)의 경우 리스트 형식 그대로 출력,
# join 함수는 리스트의 각 요소를 지정된 구분자로(공백) 연결하여 하나의 문자열로 출력
print(" ".join(interest))

# 067 join 메서드
# interest 리스트에는 아래의 데이터가 바인딩되어 있다.
interest = ['삼성전자', 'LG전자', 'Naver', 'SK하이닉스', '미래에셋대우']
# interest 리스트를 사용하여 아래와 같이 화면에 출력하라.
# 출력 예시 : 삼성전자/LG전자/Naver/SK하이닉스/미래에셋대우
# 위에 구분자 " "를 "/"로 수정만 하면 됨
print("/".join(interest))

# 068 join 메서드
# interest 리스트에는 아래의 데이터가 바인딩되어 있다.
interest = ['삼성전자', 'LG전자', 'Naver', 'SK하이닉스', '미래에셋대우']
# join() 메서드를 사용해서 interest 리스트를 아래와 같이 화면에 출력하라.
# 출력 예시 : 
# 삼성전자
# LG전자
# Naver
# SK하이닉스
# 미래에셋대우
# 줄 바꿈 = \n
print("\n".join(interest))


# 069 문자열 split 메서드
# 회사 이름이 슬래시 ('/')로 구분되어 하나의 문자열로 저장되어 있다.
string = "삼성전자/LG전자/Naver"
# 이를 interest 이름의 리스트로 분리 저장하라.
# 실행 예시 : print(interest) 
# ['삼성전자', 'LG전자', 'Naver']
# 문자열을 "/" 기준으로 분리하여 리스트로 생성, split 함수 = 문자열을 특정 구분자를 기준으로 분리하고, 그 결과를 리스트로 반환
interest = string.split("/")
print(interest)

# 070 리스트 정렬
# 리스트에 있는 값을 오름차순으로 정렬하세요.
data = [2, 4, 3, 1, 5, 10, 9]
# sort()를 사용하여 리스트를 오름차순 정렬
data.sort()
print(data)